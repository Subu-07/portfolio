@use "Sass:math";

$grid_columns:12;

$grid_gaps:(
    "0":0,
    "1":10px,
    "2":20px,
    "3":30px,
);

$layout-values:flex-start,flex-end,center,space-between,space-around;

//  Base layout classes

.container {
    width: 100%;
    max-width:1200px;
    margin: 0 auto;
    padding:0 20px;
    box-sizing: border-box;
}
.row{
    display: flex;
    flex-wrap: row-wrap;
}

// grid gaps
@each $key, $val in $grid_gaps {
    .gap-#{$key}>*{
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}

// justify content class

@each $val in $layout-values{
    .justify-#{$val}{
        justify-content: $val;
    }
}

// col class
@include xs{
    @for $i from 1 through $grid_columns{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%,$grid_columns);
        }
    }
}

@include sm{
    @for $i from 1 through $grid_columns{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%,$grid_columns);
        }
    }
}

@include md{
    @for $i from 1 through $grid_columns{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%,$grid_columns);
        }
    }
}

@include lg{
    @for $i from 1 through $grid_columns{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%,$grid_columns);
        }
    }
}

@include xl{
    @for $i from 1 through $grid_columns{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%,$grid_columns);
        }
    }
}